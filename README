
设计要点概述:

1.单个节点是单进程多线程, 每一个节点是基于 actor 模型。
2.基于服务（service），服务与服务之间用消息驱动。
3.保持核心层代码的精简。
	核心层的代码规模是10k+ c代码加2k+lua代码。
	保持核心代码精简的好处是
	1.比较容易定位性能瓶颈。
	2.比较容易维护。只要一个稍微有点c经验的程序员花几天的时间就可以了解整体代码框架。
	3.代码量越小，出现bug的机会越小。改bug越容易。
4.精简核心层api接口。
	核心层api接口不多于20+。核心层api接口越少。游戏逻辑开发人员的心智负担越小。让游戏逻辑程序员只关注在游戏逻辑开发上。
5.添加rpc功能。
	在游戏开发中，会涉及到很多异步相关的功能。在核心层上实现rpc功能，让这些异步功能可以用比较方便的同步的写法来写，可以让逻辑开发人员基本上不用再考虑异步应该怎么实现才比较不容易出问题。
6.屏蔽对外网络层协议功能。
	程序内部不用知道这个包是来自tcp 还是来自udp的，这样游戏逻辑部分就可以比较轻松的实现多个网络层的功能。比如说走路的同步，游戏逻辑就可以不用知道这个是来自tcp还是来自udp的。
7.添加安全沙盒lua

启动方法:
	z fps

